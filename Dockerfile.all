
ARG AWS_SDK_CPP_VERSION="1.8.159"
ARG AWS_LC_VERISON="v0.1-beta"
ARG S2N_TLS_VERSION="v0.10.0"
ARG AWS_C_COMMON_VERSION="v0.5.2"
ARG AWS_CHECKSUMS_VERSION="v0.1.10"
ARG AWS_C_CAL_VERSION="v0.3.3"
ARG AWS_C_IO_VERSION="v0.9.2"
ARG AWS_C_EVENT_STREAM_VERSION="v0.2.7"
ARG AWS_SDK_CPP_VERSION="1.8.160"

ARG INSTALL_PATH=/usr/local/
ARG OUT_PATH=/usr/local/

FROM ubuntu:20.04 as base

# Fix tzdata hang
ENV TZ=Etc/UTC
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN \
    apt-get update && \
    apt-get install -y \
    curl wget git zip unzip \
    cmake g++ gcc \
    libcurl4-openssl-dev libssl-dev libpulse-dev \
    uuid-dev zlib1g-dev

RUN apt-get update && \
    apt-get install -y \
    make golang-1.13

ENV PATH="$PATH:/usr/lib/go-1.13/bin"
COPY scripts/ /usr/local/bin/
WORKDIR /code/


# # Common dependencies
# # -----------------------------------------------
# FROM base as aws-lc
# ARG AWS_LC_VERISON
# ENV AWS_LC_VERISON="$AWS_LC_VERISON"
# WORKDIR /code/
# SHELL ["bash", "-c"]
# RUN download.sh "https://github.com/awslabs/aws-lc/archive/${AWS_LC_VERISON}.zip"
# RUN build_source.sh "aws-lc"


# FROM aws-lc as s2n-tls
# ARG S2N_TLS_VERSION
# ENV S2N_TLS_VERSION="${S2N_TLS_VERSION}"
# WORKDIR /code/
# SHELL ["bash", "-c"]
# RUN download.sh "https://github.com/aws/s2n-tls/archive/${S2N_TLS_VERSION}.zip"
# ENV TESTS=integration GCC_VERSION=9 BUILD_S2N=true LIBCRYPTO_ROOT=/usr/lib/x86_64-linux-gnu/libcrypto.a CMAKE_INSTALL_LIBDIR=/usr/share/cmake/lib
# RUN build_source.sh "s2n-tls"


# FROM base as aws-c-common
# ARG AWS_C_COMMON_VERSION
# ENV AWS_C_COMMON_VERSION="${AWS_C_COMMON_VERSION}"
# WORKDIR /code/
# RUN download.sh "https://github.com/awslabs/aws-c-common/archive/${AWS_C_COMMON_VERSION}.zip"
# RUN build_source.sh "aws-c-common"


# FROM base as commmon-dependencies
# WORKDIR /code/
# ENV CMAKE_BUILD_ARGS="-DCMAKE_INSTALL_LIBDIR=lib"
# COPY --from=aws-lc /usr/share/. /usr/share/
# COPY --from=s2n-tls /usr/share/. /usr/share/
# COPY --from=aws-c-common /usr/share/. /usr/share/
# # -----------------------------------------------



# # FROM commmon-dependencies as aws-checksums
# # ARG AWS_CHECKSUMS_VERSION
# # ENV AWS_CHECKSUMS_VERSION="${AWS_CHECKSUMS_VERSION}"
# # WORKDIR /code/
# # RUN download.sh "https://github.com/awslabs/aws-checksums/archive/${AWS_CHECKSUMS_VERSION}.zip"
# # RUN build_source.sh "aws-checksums"


# # FROM commmon-dependencies as aws-c-cal
# # ARG AWS_C_CAL_VERSION
# # ENV AWS_C_CAL_VERSION="${AWS_C_CAL_VERSION}"
# # WORKDIR /code/
# # RUN download.sh "https://github.com/awslabs/aws-c-cal/archive/${AWS_C_CAL_VERSION}.zip"
# # RUN build_source.sh "aws-c-cal"


# # FROM commmon-dependencies as aws-c-io
# # COPY --from=aws-c-cal /usr/share/. /usr/share/
# # ARG AWS_C_IO_VERSION
# # ENV AWS_C_IO_VERSION="${AWS_C_IO_VERSION}"
# # WORKDIR /code/
# # RUN download.sh "https://github.com/awslabs/aws-c-io/archive/${AWS_C_IO_VERSION}.zip"
# # RUN build_source.sh "aws-c-io"


# # FROM commmon-dependencies as aws-c-event-stream
# # COPY --from=aws-checksums /usr/share/. /usr/share/
# # COPY --from=aws-c-io /usr/share/. /usr/share/
# # ARG AWS_C_EVENT_STREAM_VERSION
# # ENV AWS_C_EVENT_STREAM_VERSION="${AWS_C_EVENT_STREAM_VERSION}"
# # WORKDIR /code/
# # RUN download.sh "https://github.com/awslabs/aws-c-event-stream/archive/${AWS_C_EVENT_STREAM_VERSION}.zip"
# # RUN build_source.sh "aws-c-event-stream"


FROM base as aws-sdk-cpp
ARG AWS_SDK_CPP_VERSION
ENV AWS_SDK_CPP_VERSION="${AWS_SDK_CPP_VERSION}"
WORKDIR /code/
RUN download.sh "https://github.com/aws/aws-sdk-cpp/archive/${AWS_SDK_CPP_VERSION}.zip"
WORKDIR /sdk_build/
RUN cmake /code/aws-sdk-cpp-${AWS_SDK_CPP_VERSION} -DBUILD_ONLY="s3"

FROM base as builder
WORKDIR /sdk_build/
COPY --from=aws-sdk-cpp /sdk_build/ .
COPY . .
RUN cmake -Daws-sdk-cpp_DIR=/sdk_build/ .
# # RUN make
# # RUN chmod +x s3-demo

# # # # Execute
# # # ENTRYPOINT [ "/code/s3-demo" ]

# # # # Default region N.Virginia
# # # CMD ["us-east-1"]
