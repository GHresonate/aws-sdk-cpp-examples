name: Push latest version to DockerHub

on:
  push:
    branches: [master]
    paths-ignore:
      - "README.md"

jobs:
  # docker_build_ubuntu:
  #   runs-on: ubuntu-20.04
  #   name: docker build ubuntu
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Inject slug/short variables
  #       uses: rlespinasse/github-slug-action@v3.x
  #     - name: Set env vars
  #       run: |
  #         export BRANCH_NAME=${{ env.GITHUB_REF_SLUG }}
  #         [[ $BRANCH_NAME = "master" ]] && export BRANCH_NAME=master-test
  #         echo DOCKER_TAG=ghcr.io/unfor19/docker-aws-sdk-cpp:${BRANCH_NAME//\//-}-latest >> $GITHUB_ENV
  #     - name: docker login
  #       run: |
  #         echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
  #     - name: docker pull
  #       run: |
  #         docker pull "$DOCKER_TAG" || true
  #     - name: docker build
  #       run: docker build . -t cached --cache-from="$DOCKER_TAG" -f Dockerfile
  #     - name: docker tag
  #       run: docker tag cached "$DOCKER_TAG"
  #     - name: docker push
  #       run: docker push "$DOCKER_TAG" || true

  docker_build_alpine:
    runs-on: ubuntu-20.04
    name: docker build alpine
    steps:
      - uses: actions/checkout@v2
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Set env vars
        run: |
          export BRANCH_NAME=${{ env.GITHUB_REF_SLUG }}
          [[ $BRANCH_NAME = "master" ]] && export BRANCH_NAME=master-test
          echo DOCKER_TAG=ghcr.io/unfor19/docker-aws-sdk-cpp:${BRANCH_NAME//\//-}-latest-alpine >> $GITHUB_ENV
      - name: docker pull ubuntu
        run: |
          echo '${{ secrets.DOCKER_PASSWORD }}' | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker pull alpine:3.12
      - name: docker login ghcr
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
      - name: docker pull cached
        run: |
          docker pull "$DOCKER_TAG" || true
      - name: docker build cached
        run: docker build . -t cached --cache-from="$DOCKER_TAG" -f Dockerfile.alpine
      - name: docker tag cached
        run: docker tag cached "$DOCKER_TAG"
      - name: docker push cached to ghcr
        run: docker push "$DOCKER_TAG" || true

  # dockerhub-latest:
  #   needs: docker_build_ubuntu
  #   name: push latest ubuntu
  #   runs-on: ubuntu-latest
  #   env:
  #     DOCKERHUB_TAG: unfor19/aws-sdk-cpp:latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Inject slug/short variables
  #       uses: rlespinasse/github-slug-action@v3.x
  #     - name: Set env vars
  #       run: |
  #         export BRANCH_NAME=${{ env.GITHUB_REF_SLUG }}
  #         [[ $BRANCH_NAME = "master" ]] && export BRANCH_NAME=master-test
  #         echo DOCKER_TAG=ghcr.io/unfor19/docker-aws-sdk-cpp:${BRANCH_NAME//\//-}-latest >> $GITHUB_ENV
  #     - name: docker pull ubuntu
  #       run: |
  #         echo '${{ secrets.DOCKER_PASSWORD }}' | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
  #         docker pull ubuntu:20.04
  #     - name: docker login ghcr
  #       run: |
  #         echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
  #     - name: docker pull cached
  #       run: |
  #         docker pull "$DOCKER_TAG"
  #     - name: docker build image
  #       run: |
  #         docker build . --cache-from="$DOCKER_TAG" --tag "${DOCKERHUB_TAG}" -f Dockerfile --target app
  #     - name: docker push to dockerhub
  #       run: |
  #         echo '${{ secrets.DOCKER_PASSWORD }}' | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
  #         docker push "${DOCKERHUB_TAG}" && echo "Pushed $DOCKERHUB_TAG"

  dockerhub-latest-alpine:
    needs: docker_build_alpine
    name: push latest alpine
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_TAG: unfor19/aws-sdk-cpp:latest-alpine
    steps:
      - uses: actions/checkout@v2
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Set env vars
        run: |
          export BRANCH_NAME=${{ env.GITHUB_REF_SLUG }}
          [[ $BRANCH_NAME = "master" ]] && export BRANCH_NAME=master-test
          echo DOCKER_TAG=ghcr.io/unfor19/docker-aws-sdk-cpp:${BRANCH_NAME//\//-}-latest-alpine >> $GITHUB_ENV
      - name: docker login ghcr
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
      - name: docker pull cached
        run: |
          docker pull alpine:3.12        
          docker pull "$DOCKER_TAG"
      - name: docker build image
        run: |
          docker build . --cache-from="$DOCKER_TAG" --tag "${DOCKERHUB_TAG}" -f Dockerfile.alpine --target app
      - name: docker push to dockerhub
        run: |
          echo '${{ secrets.DOCKER_PASSWORD }}' | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push "${DOCKERHUB_TAG}" && echo "Pushed $DOCKERHUB_TAG"
